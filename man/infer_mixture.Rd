% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eca-funcs.R
\name{infer_mixture}
\alias{infer_mixture}
\title{Estimate mixing proportions and origin probabilities from a mixture}
\usage{
infer_mixture(reference, mixture, gen_start_col, method = "MCMC",
  reps = 2000, burn_in = 100, pb_iter = 100, sample_int_Pi = 1)
}
\arguments{
\item{reference}{a dataframe of two-column genetic format data, proceeded by "repunit", "collection",
and "indiv" columns. Does not need "sample_type" column, and will be overwritten if provided}

\item{mixture}{a dataframe of two-column genetic format data. Must have the same structure as
\code{reference} dataframe, but "collection" and "repunit" columns are ignored.
Does not need "sample_type" column, and will be overwritten if provided}

\item{gen_start_col}{the first column of genetic data in both data frames}

\item{method}{a choice between "MCMC", "PB" methods for estimating mixture proportions}

\item{reps}{the number of iterations to be performed in MCMC}

\item{burn_in}{how many reps to discard in the beginning of MCMC when doing the mean calculation.
They will still be returned in the traces if desired.}

\item{pb_iter}{how many bootstrapped data sets to do for bootstrap correction using method PB.  Default
is 100.}
}
\value{
\code{mix_proportion_pipeline} returns the standard output of the chosen
mixing proportion estimation method (always a list). For method "PB",
returns the standard MCMC results, as well as the bootstrap-corrected
collection proportions under \code{$mean$bootstrap}
}
\description{
THIS IS A MINOR REWRITE OF ref_and_mix_pipeline. ERIC JUST WANTED TO CHANGE
THE OUTPUT A LITTLE BIT SO IT IS RETURNING DATA FRAMES. AND MORE FLEXIBILITY
IN SPECIFYING PRIORS.
}
\details{
Takes a mixture and reference dataframe of two-column genetic data, and a
desired method of estimation for the population mixture proportions (MCMC, PB, or BH MCMC)
Returns the output of the chosen estimation method

"MCMC" estimates mixing proportions and individual posterior
probabilities of assignment through Markov-chain Monte Carlo,
while "PB" does the same with a parametric bootstrapping correction,
and "BH" uses the misassignment-scaled, hierarchial MCMC.
All methods use a uniform 1/(# collections or RUs) prior for pi/omega and rho.
}
\examples{
reference <- alewife[,-1]
mixture <- alewife[,-1]
gen_start_col <- 14
bh <- ref_and_mix_pipeline(reference, mixture, gen_start_col, method = "BH")
mcmc <- ref_and_mix_pipeline(reference, mixture, gen_start_col, method = "MCMC")
pb <- ref_and_mix_pipeline(reference, mixture, gen_start_col, method = "PB")

}

